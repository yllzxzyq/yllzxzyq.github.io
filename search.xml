<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python连接MySQL的pymysql方法</title>
      <link href="/2019/04/23/Python%E8%BF%9E%E6%8E%A5MySQL%E7%9A%84pymysql%E6%96%B9%E6%B3%95/"/>
      <url>/2019/04/23/Python%E8%BF%9E%E6%8E%A5MySQL%E7%9A%84pymysql%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p><meta name="referrer" content="no-referrer"></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><h4 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h4><p>MySQL 是最流行的关系型数据库管理系统，在 WEB 应用方面 MySQL 是最好的 RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。</p><h4 id="pymysql"><a href="#pymysql" class="headerlink" title="pymysql"></a>pymysql</h4><p>PyMySQL 是在 Python3.x 版本中用于连接 MySQL 服务器的一个库，Python2中则使用mysqldb。利用这个库可以方便地在Python3操作MySQL数据库。</p><h3 id="安装部分"><a href="#安装部分" class="headerlink" title="安装部分"></a>安装部分</h3><h4 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h4><p><strong>下载：</strong>MySQL可以直接在<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">官方网站</a>选择上面的安装包下载</p><p><img src="/yllzxzyq/yllzxzyq.github.io.git/2019/04/23/Python连接MySQL的pymysql方法/D:/GIT\hexo\source\_posts\Python连接MySQL的pymysql方法\MySQL Download.png" alt="下载页"></p><p>不想注册的话可以点击左下角的跳过注册</p><p><strong>解压：</strong>下载完成后直接解压到你想安装的目录下，方便后续安装服务</p><p><strong>配置:</strong> 在系统的环境变量的path里添加一个mysql的配置  指向mysql的bin目录。</p><p>Win10下具体步骤为：此电脑-打开设置-系统-关于-系统信息-高级系统设置-环境变量-选中path点击编辑-添加bin的完整目录。</p><p><strong>安装的MySQL：</strong>以<strong>管理员身份</strong>打开CMD，根据安装的目录键入或者直接拖入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 安装目录/bin</span><br></pre></td></tr></table></figure><p>然后依次输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --console</span><br><span class="line">mysqld --initialize</span><br></pre></td></tr></table></figure><p>完成后会在窗口出现生成临时密码的一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A temporary password is generated for root@localhost: APWCY5ws&amp;hjQ</span><br></pre></td></tr></table></figure><p><code>[root @ localhost]：</code>后即为你的<strong>临时密码</strong></p><p>如果关闭了窗口，也可以去安装目录下的<strong>data文件夹</strong>下找到<code>.err</code>的文件，其中也存有刚才生成的<strong>临时密码</strong></p><p><strong>添加my.imi文件:</strong>在安装根目录下创建文本文件，写入基本配置并保存为my.ini文件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"># 设置3306端口</span><br><span class="line">port=3306</span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line">basedir=你的解压目录  #例如:D:\Software\mysql-8.0.15-winx64</span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line">datadir=解压目录下的Data文件夹  #例如：D:\Software\mysql-8.0.15-winx64\Data</span><br><span class="line"># 允许最大连接数</span><br><span class="line">max_connections=200</span><br><span class="line"># 允许连接失败的次数。</span><br><span class="line">max_connect_errors=10</span><br><span class="line"># 服务端使用的字符集默认为UTF8</span><br><span class="line">character-set-server=utf8</span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line">default-storage-engine=INNODB</span><br><span class="line"># 默认使用“mysql_native_password”插件认证</span><br><span class="line">#mysql_native_password</span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure><p><strong>启动服务：</strong>以<strong>管理员身份</strong>打开CMD，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start mysql</span><br></pre></td></tr></table></figure><p>如需关闭(暂时不进行）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure><p>然后可以登录MySQL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>再根据提示输入刚才的<strong>临时密码</strong>即可</p><p>如果需要修改密码（MySQL大小写不敏感）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set password = &quot;123&quot;;  #123即为密码</span><br></pre></td></tr></table></figure><p>另外：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show databases； #可以显示数据库内容</span><br><span class="line">exit;  #退出mysql</span><br></pre></td></tr></table></figure><h4 id="安装PyMySQL"><a href="#安装PyMySQL" class="headerlink" title="安装PyMySQL"></a>安装PyMySQL</h4><p>在CMD中使用如下命令安装最新版的 PyMySQL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyMySQL</span><br></pre></td></tr></table></figure><p>如果你的系统不支持 pip 命令，可以使用以下方式安装：</p><p>1、使用 git 命令下载安装包安装(你也可以手动下载)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/PyMySQL/PyMySQL</span><br><span class="line">$ cd PyMySQL/</span><br><span class="line">$ python3 setup.py install</span><br></pre></td></tr></table></figure><p>2、如果需要制定版本号，可以使用 curl 命令来安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ # X.X 为 PyMySQL 的版本号</span><br><span class="line">$ curl -L https://github.com/PyMySQL/PyMySQL/tarball/pymysql-X.X | tar xz</span><br><span class="line">$ cd PyMySQL*</span><br><span class="line">$ python3 setup.py install</span><br><span class="line">$ # 现在你可以删除 PyMySQL* 目录</span><br></pre></td></tr></table></figure><h3 id="数据库连接部分"><a href="#数据库连接部分" class="headerlink" title="数据库连接部分"></a>数据库连接部分</h3><p>安装好MySQL和PyMySQL后，使用你常用的IDLE，通过调用<code>pymysql</code>库即可方便的操作你的数据库了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql <span class="comment">#调用库</span></span><br><span class="line"></span><br><span class="line">connection = pymysql.connect(port=<span class="number">3306</span>, user=<span class="string">"root"</span>,password=<span class="string">"123"</span>)  <span class="comment">#建立连接</span></span><br><span class="line">print(connection)   <span class="comment">#输出连接</span></span><br><span class="line">connection.close()  <span class="comment">#关闭连接</span></span><br></pre></td></tr></table></figure><p>为保证成功连接，防止出现以下错误：</p><ul><li><strong>注意</strong>端口号不需要使用双引号<code>&quot;&quot;</code>。</li><li>保证MySQL服务已经<strong>开启</strong>，如果没打开按照上面的方法或者右键此电脑<strong>管理</strong>进入服务管理中查找打开。</li><li>避免端口被防火墙<strong>拦截</strong>，可以选择关闭防火墙（不建议），或者去防火墙中允许通过此端口。</li><li>如果端口<strong>被占用</strong>，可以前往刚才设置的<code>my.ini</code>文件中，修改对应端口，然后尝试</li></ul><p>如果成功得到了<code>connection</code>的值为这种形式<code>&lt;pymysql.connections.Connection at 0x2615b3c8320&gt;</code>，即连接成功，进而可以对你的数据库进行各种操作了。</p><p>是不是挺简单的？由于我也是自己初次尝试，如有错误，还望大家指正。如果出现了新的问题或者好的建议，也非常欢迎留言一起交流。</p><p><em><a id="more"></a></em></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用hexo+GitHub搭建个人博客</title>
      <link href="/2019/04/22/%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/04/22/%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p><meta name="referrer" content="no-referrer"><br>hexo是一款非常好用的个人博客搭建工具，其主要作用是按照配置文件自动生成网页，并支持按照特定的格式部署博客配置。我们需要做的就是安装好hexo软件并按照自己的需要进行格式，界面，上传网站等方面的基础配置。接下来就跟着我<code>step by step</code> 搭建起你自己的个人博客吧。</p><h3 id="安装Node-js-，Git"><a href="#安装Node-js-，Git" class="headerlink" title="安装Node.js ，Git"></a>安装<a href="http://nodejs.org/" target="_blank" rel="noopener">Node.js</a> ，<a href="http://git-scm.com/" target="_blank" rel="noopener">Git</a></h3><h4 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h4><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>.</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> ：<code>brew install git</code>;或下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">安装程序</a> 安装。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li></ul><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>用git bash 输入以下命令即可：</p><p>cURL:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure><p>Wget:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>同样通过git bash命令行进行操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="hexo初始化"><a href="#hexo初始化" class="headerlink" title="hexo初始化"></a>hexo初始化</h4><p>执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h5 id="完成后的目录："><a href="#完成后的目录：" class="headerlink" title="完成后的目录："></a>完成后的目录：</h5><ul><li><code>_config.yml</code>：<code>WebSite</code>(博客)的全局配置文件。</li><li><code>package.json</code>：<code>Hexo</code>的参数及依赖插件。</li><li><code>node_modules/</code>：<code>Hexo</code>的扩展插件目录。</li><li><code>scaffolds/</code>：<code>Hexo</code>存放<code>layout</code>(布局)模板的目录。</li><li><code>themes/</code>：<code>Hexo</code>存放博客主题的目录。</li><li><code>source/</code>：<code>Hexo</code>存放博客资源的目录。</li></ul><h5 id="本地查看你的博客："><a href="#本地查看你的博客：" class="headerlink" title="本地查看你的博客："></a>本地查看你的博客：</h5><ul><li>切换到<code>&lt;folder&gt;</code>目录：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /&lt;folder&gt;</span><br></pre></td></tr></table></figure><ul><li>启动服务，<code>-P</code>参数为可选项，指定占用的端口号，默认为<code>4000</code>：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><ul><li>启动服务成功后，进入文章预览调试模式，在<code>http://localhost:4000/</code>就可以预览生成的静态页面了。</li></ul><p><strong>如果出现<code>http://localhost:4000/</code>无法访问，可能是这个常用端口被占用了，尝试更改端口</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s -p 5000</span><br></pre></td></tr></table></figure><p><strong>再次访问，如果无法访问可能是浏览器未授权防火墙，使用已授权的浏览器或者去控制面板授权</strong></p><p>Win10操作：设置——网络和internet——windows防火墙——允许应用通过防火墙。</p><h3 id="网站部署"><a href="#网站部署" class="headerlink" title="网站部署"></a>网站部署</h3><h4 id="网站来源"><a href="#网站来源" class="headerlink" title="网站来源"></a>网站来源</h4><p><strong>1. <code>GitHub</code></strong></p><p><code>GitHub</code>提供免费的<code>GitHub Pages</code>服务，有<code>300MB</code>的空间。这样建立的博客完全托管于<code>GitHub</code>上，无需花过多的时间去管理。</p><p><strong>2.自己购买或者注册(暂不介绍)</strong></p><h4 id="GitHub生成网页"><a href="#GitHub生成网页" class="headerlink" title="GitHub生成网页"></a>GitHub生成网页</h4><h5 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册<a href="https://github.com">GitHub</a></h5><p><code>GitHub</code>被誉为世界上最大的同性交友平台，功能非常强大。</p><h5 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h5><p>创建一个新的仓库（<code>repositories</code>），名称必须为<code>用户名.github.io</code>。比如我的用户名为<code>yllzxzyq</code>，创建的库名就是<code>yllzxzyq.github.io</code>。</p><h5 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h5><p>配置<code>user.name</code>、<code>user.email</code>，在<code>Git Bash</code>输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;username&quot;</span><br><span class="line">$ git config --global user.email &quot;user-email&quot;</span><br></pre></td></tr></table></figure><h5 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h5><p>配置服务器与<code>GitHub</code>可以通过密钥通信，生成密钥：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;user-email&quot;</span><br></pre></td></tr></table></figure><p>生成的密钥文件在<code>.ssh</code>目录，<code>id_rsa</code>为私钥，<code>id_rsa.pub</code>为公钥。</p><p>将公钥添加到<code>GitHub</code>上，在<a href="https://github.com">GitHub</a>操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">右上角头像 ---&gt; Settings ---&gt; SSH and GPG keys ---&gt; New SSH key</span><br></pre></td></tr></table></figure><h5 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a>配置博客</h5><p>在网页生成之后配置博客的全局配置文件<code>_config.yml</code>：</p><p>注意修改<code>repo</code>信息为你自己的对应信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h3><ul><li>获取帮助信息：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo help</span><br></pre></td></tr></table></figure><ul><li>获取版本信息：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure><ul><li>创建新的文章：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n NAME</span><br></pre></td></tr></table></figure><ul><li>创建新的页面：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n page NAME</span><br></pre></td></tr></table></figure><ul><li>生成静态文件：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><ul><li>清理缓存文件：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo c</span><br></pre></td></tr></table></figure><ul><li>启动预览服务：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#设置端口号</span><br><span class="line">hexo s -p 端口号</span><br><span class="line">#默认端口4000</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><ul><li>生成静态文件并部署：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><ul><li>生成静态文件并预览：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g</span><br></pre></td></tr></table></figure><ul><li>命令简写速查表：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br><span class="line">hexo c == hexo clean</span><br></pre></td></tr></table></figure><h3 id="个性配置"><a href="#个性配置" class="headerlink" title="个性配置"></a>个性配置</h3><p>全局配置通过hexo初始化目录下的<code>_config.yml</code>文件进行修改</p><h4 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h4><ul><li>对于博客全局配置文件的配置，可参考<a href="https://hexo.io/docs/configuration.html" target="_blank" rel="noopener">官方指导文档</a>，亦可参考这篇配置文件。</li><li><strong>注意：配置文件中，冒号后面一定要加空格。</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html, 允许自行更换页面语言</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site: 网站配置</span><br><span class="line">## 标题</span><br><span class="line">title: Xiao&apos;s Blog</span><br><span class="line">## 副标题</span><br><span class="line">subtitle: 不忘初心, 方得始终</span><br><span class="line">## 网站描述</span><br><span class="line">description: 不忘初心, 方得始终</span><br><span class="line">## 作者</span><br><span class="line">author: YuXiao</span><br><span class="line">## 网站语言</span><br><span class="line">language: zh-CN</span><br><span class="line">## 时区</span><br><span class="line">timezone: Asia/Shanghai</span><br><span class="line"></span><br><span class="line"># URL: 网址配置</span><br><span class="line">## 如果网站是放在子目录中，将url设置成&apos;http://yoursite.com/child&apos;，将root设置成&apos;/child/&apos;</span><br><span class="line">url:https://github.com/username/username.github.io.git</span><br><span class="line">## 文章链接地址格式, 即文章存放的目录</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory: 目录设置</span><br><span class="line">## 博客资源目录</span><br><span class="line">source_dir: source</span><br><span class="line">## 公共目录, 存放生成的静态文件</span><br><span class="line">public_dir: public</span><br><span class="line">## 标签目录, 默认是tags, 实际存放在source/tags中</span><br><span class="line">tag_dir: tags</span><br><span class="line">## 档案目录, 默认是archives, 实际存放在source/archives中</span><br><span class="line">archive_dir: archives</span><br><span class="line">## 分类目录, 默认是categories, 实际存放在source/categories中</span><br><span class="line">category_dir: categories</span><br><span class="line">## 代码目录, 默认是downloads/code</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">## 国际化目录, 默认跟language相同</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">## 不需要渲染的文件夹或文件夹, 放在[]中</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing: 写作配置</span><br><span class="line">## 新建博文的默认名称</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">## 默认布局模板</span><br><span class="line">default_layout: post</span><br><span class="line">## 是否将标题转换成标题形式（首字母大写）</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">## 在新标签页面中打开网页</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">## 把文件名称转换为(1)小写或(2)大写</span><br><span class="line">filename_case: 0</span><br><span class="line">## 是否显示草稿</span><br><span class="line">render_drafts: false</span><br><span class="line">## 启用Asset目录, 文章资源目录</span><br><span class="line">post_asset_folder: true</span><br><span class="line">## 将链接改为与根目录的相对路径</span><br><span class="line">relative_link: false</span><br><span class="line">## 显示未来的文章</span><br><span class="line">future: true</span><br><span class="line">## 代码块的配置</span><br><span class="line">highlight:</span><br><span class="line">  ### 是否启用代码块</span><br><span class="line">  enable: true</span><br><span class="line">  ### 是否显示行数</span><br><span class="line">  line_number: true</span><br><span class="line">  ### 是否自动检测语言</span><br><span class="line">  auto_detect: false</span><br><span class="line">  ### 是否将tab替换为空格</span><br><span class="line">  tab_replace: true</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag: 分类与标签</span><br><span class="line">## 默认分类</span><br><span class="line">default_category: uncategorized</span><br><span class="line">## 分类别名</span><br><span class="line">category_map:</span><br><span class="line">## 标签别名</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format: 日期与时间格式</span><br><span class="line">## Hexo 使用 Moment.js 来解析与显示时间</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination: 分页配置</span><br><span class="line">## 设置 per_page 值为 0 则禁用分页</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">## 分页路径, 在public中可以看到</span><br><span class="line">pagination_dir: page</span><br><span class="line">## 首页的分页设置</span><br><span class="line">## 需要插件: npm install --no-optional --save hexo-generator-index</span><br><span class="line">index_generator:</span><br><span class="line">  ### 页面个数</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line">## 归档页的分页设置</span><br><span class="line">## 需要插件: npm install --no-optional --save hexo-generator-archive</span><br><span class="line">archive_generator:</span><br><span class="line">  ### 页面个数</span><br><span class="line">  per_page: 20</span><br><span class="line">  ### 按照年份归档</span><br><span class="line">  yearly: true</span><br><span class="line">  ### 按照月份归档</span><br><span class="line">  monthly: true</span><br><span class="line"></span><br><span class="line">## 标签页的分页设置</span><br><span class="line">## 需要插件: npm install --no-optional --save hexo-generator-tag</span><br><span class="line">tag_generator:</span><br><span class="line">  ### 页面个数</span><br><span class="line">  per_page: 10</span><br><span class="line"></span><br><span class="line"># Extensions: 拓展配置</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">## 主题</span><br><span class="line">theme: next</span><br><span class="line"></span><br><span class="line"># Deployment: 部署配置</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git </span><br><span class="line">  repository: git@github.com:username/username.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h4 id="高级功能配置"><a href="#高级功能配置" class="headerlink" title="高级功能配置"></a>高级功能配置</h4><p>在文件内添加一下内容进行配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># Sitemap: 站点地图</span><br><span class="line">## 谷歌站点地图</span><br><span class="line">## 需要插件: npm install --no-optional --save hexo-generator-sitemap</span><br><span class="line">sitemap:</span><br><span class="line">  ### 文件名</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">## 百度站点地图</span><br><span class="line">## 需要插件: npm install --no-optional --save hexo-generator-baidu-sitemap</span><br><span class="line">baidusitemap:</span><br><span class="line">  ### 文件名</span><br><span class="line">  path: baidusitemap.xml</span><br><span class="line"></span><br><span class="line"># 统计文章字数及阅读时长</span><br><span class="line">## 需要插件: npm install --no-optional --save hexo-symbols-count-time</span><br><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line"></span><br><span class="line"># Local Search: 本地搜索插件</span><br><span class="line">## 需要插件: npm install --no-optional --save hexo-generator-search</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><h4 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h4><p>由于主题配置毕竟繁琐，我打算另起一篇介绍一下Next 7.1版本的详情配置问题。感兴趣的朋友可以看一下。</p><p><strong>部分引用</strong>：</p><p>​    <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官网文档</a></p><p>​    <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Xiao‘s Blog</a></p><p><em><a id="more"></a></em></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计文档字符及其频率</title>
      <link href="/2019/04/21/%E7%BB%9F%E8%AE%A1%E6%96%87%E6%A1%A3%E5%AD%97%E7%AC%A6%E5%8F%8A%E5%85%B6%E9%A2%91%E7%8E%87/"/>
      <url>/2019/04/21/%E7%BB%9F%E8%AE%A1%E6%96%87%E6%A1%A3%E5%AD%97%E7%AC%A6%E5%8F%8A%E5%85%B6%E9%A2%91%E7%8E%87/</url>
      
        <content type="html"><![CDATA[<p><meta name="referrer" content="no-referrer"><br>在家诚大佬的极力鼓动下，我相信了成为Python全栈数据工程师并不太难，并决定跟着某全栈工程的课本深入了解下数据工程的全套流程。 然而第一个实例（hello，world除外）就出现了问题，2017出版Python书竟然用的是Python2.7的版本。随后决定用python3重新实现一下书本内容。 此实例包括后续版本的实例都会在此分享，欢迎大家一起交流学习。</p><p><em><a id="more"></a></em></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>对于一本书籍或者刊物，了解其不同字数及其出现频率对于了解一本书的主要内容和分类都是非常有用的。并且在后续学习自然语言后，还可以通过其他方法统计词数和频率，因而此基础程序还是值得实现一下的。</p><h2 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h2><p>对于统计出现汉字的种类和频率，可以通过Python的字典类型进行实现，具体字典的使用方法见<a href="http://www.runoob.com/python3/python3-dictionary.html" target="_blank" rel="noopener">菜鸟教程Python3字典</a><br>这里用到了字典基本的建立，value调用，键值对增加，value修改，以及items（）函数。</p><h2 id="编程实现"><a href="#编程实现" class="headerlink" title="编程实现"></a>编程实现</h2><p>流程：文件遍历-除去空白——判断字典中有无该字符——有则Value加1，无则新建为1——按Value排序并返回</p><p>具体实现代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#统计txt文件中的字符频率</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">countwords</span><span class="params">(txt)</span>:</span></span><br><span class="line">    stat = &#123;&#125;<span class="comment">#建立字典存储存储字符和对应频率</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> txt:</span><br><span class="line">        line = line.strip()</span><br><span class="line">        <span class="keyword">if</span> len(line) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(line)):</span><br><span class="line">        <span class="comment">#判断有无该字符的键</span></span><br><span class="line">            <span class="keyword">if</span>(line[i] <span class="keyword">in</span> stat):</span><br><span class="line">                stat[line[i]]+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                stat[line[i]]=<span class="number">1</span></span><br><span class="line">    result=sorted(stat.items(),key = <span class="keyword">lambda</span> x:x[<span class="number">1</span>],reverse = <span class="literal">True</span>)<span class="comment">#按value大小排序</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">xyj = open(<span class="string">'xyj.txt'</span> ,<span class="string">'r'</span>,encoding = <span class="string">'utf-8'</span>)<span class="comment">#读文件</span></span><br><span class="line">r=countwords(xyj)<span class="comment">#调用函数</span></span><br><span class="line">xyj.close</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>方向</title>
      <link href="/2019/04/21/%E6%96%B9%E5%90%91/"/>
      <url>/2019/04/21/%E6%96%B9%E5%90%91/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><p>人这一生需要做的决定太多了，但是不是做每个决定的时候都很清醒。有时候我觉得自己的决定都做得太过轻松，像是刻意的洒脱一般。随着渐渐长大，就慢慢地就能发现自己的决定并非最为正确的那个。比如说贪恋游戏没好好准备高考，比如说逃课去玩拉低了GPA，再比如说鬼使神差地让对象放弃了北大生物研究所。</p><p>可是心理健康的人是不应该活在悔恨之中的，只要能认识到过错，便不会再迷茫，学习计算机是我如今的决定。我认定这是一个我绝不后悔做出的决定，至少在现在看来如是。世界再变，总不会倒退。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过BMI指数预测波士顿人寿命</title>
      <link href="/2019/04/21/%E9%80%9A%E8%BF%87BMI%E6%8C%87%E6%95%B0%E9%A2%84%E6%B5%8B%E6%B3%A2%E5%A3%AB%E9%A1%BF%E4%BA%BA%E5%AF%BF%E5%91%BD/"/>
      <url>/2019/04/21/%E9%80%9A%E8%BF%87BMI%E6%8C%87%E6%95%B0%E9%A2%84%E6%B5%8B%E6%B3%A2%E5%A3%AB%E9%A1%BF%E4%BA%BA%E5%AF%BF%E5%91%BD/</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"referrer"</span> <span class="attr">content</span>=<span class="string">"no-referrer"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h4><h4 id="问题背景："><a href="#问题背景：" class="headerlink" title="问题背景："></a>问题背景：</h4><p>BMI指数（即身体质量指数，简称体质指数又称体重，英文为Body Mass Index，简称BMI），是用体重公斤数除以身高米数平方得出的数字，是目前国际上常用的衡量人体胖瘦程度以及是否健康的一个标准。这个问题中假设BMI和寿命是线性相关的，并且有100个训练数据，需要得到训练模型并预测一个波士顿人为某一BMI指数时对应的寿命。</p><h4 id="算法思路："><a href="#算法思路：" class="headerlink" title="算法思路："></a>算法思路：</h4><p>使用pandas库处理数据，并使用scikit-learn库提供的LinearRegression函数训练模型。 接下来，我们可以根据BMI预测寿命。 具体方法如下：</p><h5 id="1-Import-第三方库"><a href="#1-Import-第三方库" class="headerlink" title="1.Import 第三方库"></a>1.Import 第三方库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line">from sklearn.linear_model import LinearRegression</span><br></pre></td></tr></table></figure><h5 id="2-读入数据集"><a href="#2-读入数据集" class="headerlink" title="2.读入数据集"></a>2.读入数据集</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bmi_life_data = pd.read_csv(<span class="string">'bmi_and_life_expectancy.csv'</span>)</span><br></pre></td></tr></table></figure><h5 id="3-训练模型"><a href="#3-训练模型" class="headerlink" title="3.训练模型"></a>3.训练模型</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bmi_life_model = LinearRegression()</span><br><span class="line">bmi_life_model.fit(bmi_life_data[[<span class="string">'BMI'</span>]] , bmi_life_data[[<span class="string">'Life expectancy'</span>]])</span><br></pre></td></tr></table></figure><h5 id="4-预测寿命"><a href="#4-预测寿命" class="headerlink" title="4.预测寿命"></a>4.预测寿命</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">laos_life_exp =bmi_life_model.predict(<span class="number">21.07931</span>)</span><br></pre></td></tr></table></figure><p>是不是感觉机器学习通过sklearn实现还是非常简单高效呢?有兴趣的话可以自己试试并画图看看预测效果： <a href="https://github.com/yllzxzyq/Nick-life-of-code">源码和数据</a>.</p>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查找字母异位词</title>
      <link href="/2019/04/21/%E6%9F%A5%E6%89%BE%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/"/>
      <url>/2019/04/21/%E6%9F%A5%E6%89%BE%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h2 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h2><p>初学Python，家诚大佬对于我的学习非常关心，为了考察我的Python语法基础，给我出了一道测试。测试内容是找到四级词典中的同字词（字母异位词），即两个单词如果包含相同的字母，次序不同，像“silent”和“listen”就是字母易位词。</p><h2 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h2><p><strong>1.读每一行，得到所有四级词汇存入newlist</strong><br>判断每一行是否为空，若不为空就分列把第一列存入列表中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def getWord(line):</span><br><span class="line">    newlist = []</span><br><span class="line">    wlist = line.split(&apos; &apos;)</span><br><span class="line">    for x in wlist:</span><br><span class="line">        if x != &apos;&apos;:</span><br><span class="line">            newlist.append(x)</span><br><span class="line">    return newlist[0]</span><br></pre></td></tr></table></figure></p><p><strong>2.给出文件位置，定义空字典和位置参数i</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = open(&apos;C:/Users/yllzxzyq/Desktop/1.txt&apos;,&apos;r&apos;,encoding=&apos;utf-8&apos;)</span><br><span class="line">dic=&#123;&#125;</span><br><span class="line">i=0</span><br></pre></td></tr></table></figure></p><p><strong>3.调用函数找出同字词并存入dic</strong><br>此处出现<code>\n</code>会读入的问题，只好多加一个判断除去。<br>然后调用<code>getWord()</code>函数把每一行单词存入<code>word</code>,然后把<code>word</code>字符串转为列表，经<code>sort()</code>函数得到字母a-z的”指纹“。<br>通过”指纹“这个特殊参数把每个单词存在包含所有指纹形如<code>finger:{i:word...}</code>类型的字典里。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">for line in f.readlines():</span><br><span class="line">    if line !=&apos;\n&apos;:</span><br><span class="line">        word=getWord(line)</span><br><span class="line">        flist=list(word)</span><br><span class="line">        flist.sort()</span><br><span class="line">        finger=&quot;&quot;</span><br><span class="line">        for z in flist:</span><br><span class="line">            finger+=z</span><br><span class="line">        if finger in dic:</span><br><span class="line">            dic[finger][i]=word</span><br><span class="line">        else:</span><br><span class="line">            dic[finger]=&#123;&#125;</span><br><span class="line">            dic[finger][i]=word</span><br><span class="line">        i+=1</span><br></pre></td></tr></table></figure></p><p><strong>4.通过判断value是否大于1输出所有同字词（字母异位词）</strong><br>遍历字典，输出所有同字词（字母异位词）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for value in dic.values():</span><br><span class="line">    if len(value)&gt;1:</span><br><span class="line">        print(value)</span><br></pre></td></tr></table></figure></p><p>测试文件下载链接：<a href="https://pan.baidu.com/disk/home#/all?vmode=list&amp;path=%2FCSDN%E8%B5%84%E6%BA%90" target="_blank" rel="noopener">四级词汇文档和源代码文件</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/04/20/hello-world/"/>
      <url>/2019/04/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
